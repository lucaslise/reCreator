{"version":3,"sources":["components/DFAGraph/index.jsx","components/NFAGraph/index.jsx","components/RegexRules/index.jsx","services/utils/constants.js","services/Token.js","services/Tokenizer.js","services/NFAState.js","services/FSM.js","services/NFA.js","services/Parser.js","actions/index.js","actions/actionTypes.js","containers/Home/components/Settings/index.jsx","containers/Home/index.jsx","containers/App/index.jsx","reducers/settingsReducer.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["getNodeColor","accept","currentState","index","indexInCurrentState","getBorderColor","DFAGraph","_ref","dfa","inputValue","automataView","_React$useState","React","useState","_React$useState2","Object","slicedToArray","vis","setVis","useEffect","updateGraph","error","console","log","options","autoResize","layout","hierarchical","direction","sortMethod","improvedLayout","edges","arrows","to","scaleFactor","font","size","color","inherit","smooth","type","height","width","physics","react_default","a","createElement","lib_default","graph","nodes","sm","_","get","match","times","key","isNodeAccept","includes","toString","id","label","border","background","borderWidth","shape","margin","getNodes","transitions","from","forIn","value","v","k","push","getEdges","ref","NFAGraph","nfa","rows","pattern","description","RegexRules","style","Grid","item","display","map","r","paddingBottom","TOKEN_TYPE","LPARENTHESIS","RPARENTHESIS","LBRACKET","RBRACKET","HYPHEN","LBRACE","RBRACE","STAR","PLUS","OR","COMMA","ALTER","END","EMPTY","BLANK","ESCAPE","EXTEND","UNKNOWN","REGCHAR","Token","text","classCallCheck","this","Tokenizer","string","regex","currentIndex","hasNextToken","_read","Error","character","length","NFAState","isAccept","nextStates","token","state","CurrentState","status","FSM","acceptStates","initialState","i","findState","_findTransitionState","nextState","NFA","startState","endState","nfaGraph","_constructGraph","alphabetTable","_getAlphabetTable","variables","_getDFAVariables","_constructNFA","j","hasOwnProperty","dStates","states2Id","id2States","closure","_emptyClosure","JSON","stringify","indexOf","initial","unvisCnt","unvisState","letter","filter","_move","nextStatesString","numOfStates","arrayId","nfaStates","stack","stateId","shift","nextId","sort","b","dfaState","stateArray","result","queue","EMPTYTOKEN","constructCharacterNFA","characters","parser","subNFA","addStates","Parser","regString","lexer","lookHead","nextToken","_resolveExpression","_reorderNFA","_transformToFSM","parseToNFA","toDFA","fsm","ordered","expressionNFA","_resolveExpressionWithoutOr","isEqual","subNFA1","subNFA2","newNFA","contructNFAsUsingOR","_resolveHeadWithFactor","headNFA","_resolveHead","Unknown","_bracketExpression","_getNFADigits","_getNFAWords","aux","command","split","start","charCodeAt","end","response","String","fromCharCode","allCharacters","_getValidDigits","concat","Array","apply","x","setVisibleDFA","visibleDFA","setVisibleNFA","visibleNFA","setAutomataView","titleStyle","fontSize","padding","fontWeight","borderBottom","connect","store","settingsState","dispatch","bindActionCreators","visible","onClose","copied","setCopied","Drawer","anchor","open","List","align","ListItem","RegexRules_RegexRules","alignItems","marginTop","Select","marginLeft","labelId","onChange","event","target","MenuItem","ListItemText","primary","secondary","Fragment","Checkbox","checked","localStorage","setItem","react_copy_to_clipboard_lib","onCopy","Chip","clickable","title","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","setPattern","_React$useState3","_React$useState4","input","setInput","_React$useState5","_React$useState6","settingsVisible","setSettingsVisible","parseToDFA","e","acceptedSentence","backgroundColor","container","spacing","xs","paddingRight","paddingLeft","TextField","autoFocus","isEmpty","fullWidth","variant","Fab","aria-label","onClick","Settings_default","components_Settings","borderRadius","alignContent","NFAGraph_NFAGraph","DFAGraph_DFAGraph","containers_App","containers_Home","storageNFA","isNull","getItem","storageDFA","isNil","Reducers","combineReducers","arguments","undefined","action","objectSpread","Store","createStore","App","es","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dd768fd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\nimport Graph from \"react-graph-vis\";\nimport _ from 'lodash'\n\nconst getNodeColor = (accept, currentState, index) => {\n  const indexInCurrentState = currentState == index\n\n  if (index === 0 && indexInCurrentState && accept) {\n    return '#c4ef9c' // green\n  } else if (indexInCurrentState && accept) {\n    return '#c4ef9c' // green\n  } else if (indexInCurrentState) {\n    return '#ec9a9a' // red\n  } else {\n    return '#fff'\n  }\n}\n\nconst getBorderColor = (accept, index) => {\n  if (index === -1) return '#fff'\n\n  return accept ? 'gray' : '#000000'\n}\n\nexport const DFAGraph = ({ dfa, inputValue, automataView }) => {\n  const [vis, setVis] = React.useState(null)\n\n  React.useEffect(() => {\n    try {\n      vis && vis.updateGraph()\n    } catch (error) {\n      console.log(error)\n    }\n  }, [dfa])\n\n  if (!dfa) return null\n\n  const getNodes = (sm) => {\n    const currentState = _.get(dfa.match(inputValue), 'currentState')\n\n    return _.times(_.get(sm, 'numOfStates', 0) + 1, (key) => {\n      const index = key - 1\n      const isNodeAccept = _.includes(_.get(sm, 'acceptStates', []), _.toString(index))\n\n      return {\n        id: index,\n        label: index === -1 ? '' : 'q' + index,\n        font: {\n          size: 20,\n        },\n        color: {\n          border: getBorderColor(isNodeAccept, index),\n          background: getNodeColor(isNodeAccept, currentState, index),\n        },\n        borderWidth: isNodeAccept ? 7 : 1,\n        shape: 'circle',\n        size: 25,\n        margin: 20,\n      }\n    })\n  }\n\n  const getEdges = (sm) => {\n    const transitions = _.get(sm, 'transitions')\n    let edges = [{\n      from: -1,\n      to: 0,\n    }]\n\n    _.forIn(transitions, (value, key) => {\n      _.forIn(value, (v, k) => {\n        edges.push({\n          from: key,\n          to: k,\n          label: v,\n          width: 1,\n        })\n      })\n    })\n\n    return edges\n  }\n\n  const options = {\n    autoResize: true,\n    layout: {\n      hierarchical: {\n        direction: \"LR\",\n        sortMethod: \"directed\"\n      },\n      improvedLayout: false,\n    },\n    edges: {\n      arrows: { to: { scaleFactor: 1 } },\n      font: {\n        size: 33,\n      },\n      color: { inherit: false },\n      smooth: { type: automataView },\n    },\n    height: \"95%\",\n    width: \"95%\",\n    physics: false\n  };\n\n  return (\n    <Graph\n      graph={{\n        nodes: getNodes(dfa),\n        edges: getEdges(dfa)\n      }}\n      options={options}\n      ref={v => setVis(v)}\n    />\n  );\n}\n\nDFAGraph.propTypes = {\n  dfa: PropTypes.object,\n  inputValue: PropTypes.string,\n  automataView: PropTypes.string.isRequired,\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport Graph from \"react-graph-vis\";\nimport _ from 'lodash'\n\nconst getBorderColor = (accept, index) => {\n  if (index === -1) return '#fff'\n\n  return accept ? 'gray' : '#000000'\n}\n\nexport const NFAGraph = ({ nfa, automataView }) => {\n  const [vis, setVis] = React.useState(null)\n\n  React.useEffect(() => {\n    try {\n      vis && vis.updateGraph()\n    } catch (error) {\n      console.log(error)\n    }\n  }, [nfa])\n\n  if (!nfa) return null\n\n  const getNodes = (sm) => {\n    return _.times(_.get(sm, 'numOfStates', 0) + 1, (key) => {\n      const index = key - 1\n      const isNodeAccept = _.includes(_.get(sm, 'acceptStates', []), _.toString(index))\n\n      return {\n        id: index,\n        label: index === -1 ? '' : 'q' + index,\n        font: {\n          size: 20\n        },\n        color: {\n          border: getBorderColor(isNodeAccept, index),\n          background: '#fff'\n        },\n        borderWidth: isNodeAccept ? 7 : 1,\n        shape: 'circle',\n        size: 25,\n        margin: 20\n      }\n    })\n  }\n\n  const getEdges = (sm) => {\n    const transitions = _.get(sm, 'transitions')\n    let edges = [{\n      from: -1,\n      to: 0,\n    }]\n\n    _.forIn(transitions, (value, key) => {\n      _.forIn(value, (v, k) => {\n        edges.push({\n          from: key,\n          to: k,\n          label: v,\n          width: 1,\n        })\n      })\n    })\n\n    return edges\n  }\n\n  const graph = { nodes: getNodes(nfa), edges: getEdges(nfa) };\n\n  const options = {\n    autoResize: true,\n    layout: {\n      hierarchical: {\n        direction: \"LR\",\n        sortMethod: \"directed\"\n      },\n      improvedLayout: false,\n    },\n    edges: {\n      color: { inherit: false },\n      arrows: { to: { scaleFactor: 1 } },\n      font: {\n        size: 33,\n      },\n      smooth: { type: automataView },\n    },\n    height: \"95%\",\n    width: \"95%\",\n    physics: false\n  };\n\n  return (\n    <Graph\n      graph={graph}\n      options={options}\n      ref={v => setVis(v)}\n    />\n  );\n}\n\nNFAGraph.propTypes = {\n  nfa: PropTypes.object,\n  automataView: PropTypes.string.isRequired,\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst rows = [\n  {\n    pattern: 'a+',\n    description: \"Um ou mais a's\",\n  },\n  {\n    pattern: 'a*',\n    description: \"Zero ou mais a's\",\n  },\n  {\n    pattern: 'a?',\n    description: 'Zero ou um a',\n  },\n  {\n    pattern: '(...)',\n    description: 'Encapsula expressão',\n  },\n  {\n    pattern: 'a|b',\n    description: 'a ou b',\n  },\n  {\n    pattern: '\\\\w',\n    description: '[a-zA-Z0-9_]',\n  },\n  {\n    pattern: '\\\\d',\n    description: '[0-9]'\n  },\n  {\n    pattern: '[a-z]',\n    description: 'Qualquer caractere entre a-z'\n  }\n]\n\nexport const RegexRules = () => {\n  return (\n    <div style={{ width: '1000px' }}>\n      <Grid item>\n        <div style={{ display: 'grid' }}>\n          {rows.map(r => {\n            return (\n              <div style={{ display: 'inline-flex', paddingBottom: 10 }}>\n                <div style={{ width: 80 }}><b>{r.pattern}</b></div>\n                <div>{r.description}</div>\n              </div>\n            )\n          })}\n        </div>\n      </Grid>\n    </div>\n  );\n};\n","export const TOKEN_TYPE = {\n    LPARENTHESIS: '(',\n    RPARENTHESIS: ')',\n    LBRACKET: '[',\n    RBRACKET: ']',\n    HYPHEN: '-',\n    LBRACE: '{',\n    RBRACE: '}',\n    STAR: '*',\n    PLUS: '+',\n    OR: '|',\n    COMMA: ',',\n    ALTER: '?',\n    END: 'EOF',\n    EMPTY: 'ε',\n    BLANK: ' ',\n    ESCAPE: '\\\\',\n    EXTEND: '\\d\\w',\n    UNKNOWN: 'unknown',\n    REGCHAR: 'a-z0-9_ \\n\\t\\r',\n};","export default class Token {\n  constructor(type, text) {\n    this.type = type;\n    this.text = text;\n  }\n}","import _ from 'lodash';\nimport Token from './Token'\nimport {\n  TOKEN_TYPE\n} from './utils/constants'\n\nexport default class Tokenizer {\n  constructor(string) {\n    this.regex = string;\n    this.currentIndex = 0;\n  }\n\n  nextToken() {\n    while (this.hasNextToken()) {\n      switch (this.regex[this.currentIndex]) {\n        case \"\\\\\":\n          this._read();\n          if (this.hasNextToken()) {\n            switch (this.regex[this.currentIndex]) {\n              case \"\\\\\":\n                ++this.currentIndex;\n                return new Token(TOKEN_TYPE.REGCHAR, \"\\\\\");\n              case \"d\":\n                ++this.currentIndex;\n                return new Token(TOKEN_TYPE.EXTEND, \"d\");\n              case \"w\":\n                ++this.currentIndex;\n                return new Token(TOKEN_TYPE.EXTEND, \"w\");\n            }\n          }\n          throw new Error('Caractere obrigatório após \"\\\\\".');\n        case \"(\":\n          this._read();\n          return new Token(TOKEN_TYPE.LPARENTHESIS, \"(\");\n        case \")\":\n          this._read();\n          return new Token(TOKEN_TYPE.RPARENTHESIS, \")\");\n        case \"{\":\n          this._read();\n          return new Token(TOKEN_TYPE.LBRACE, \"{\");\n        case \"}\":\n          this._read();\n          return new Token(TOKEN_TYPE.RBRACE, \"}\");\n        case \"[\":\n          this._read();\n          return new Token(TOKEN_TYPE.LBRACKET, \"[\");\n        case \"]\":\n          this._read();\n          return new Token(TOKEN_TYPE.RBRACKET, \"]\");\n        case \"-\":\n          this._read();\n          return new Token(TOKEN_TYPE.HYPHEN, \"-\");\n        case \"+\":\n          this._read();\n          return new Token(TOKEN_TYPE.PLUS, \"+\");\n        case \"*\":\n          this._read();\n          return new Token(TOKEN_TYPE.STAR, \"*\");\n        case \"?\":\n          this._read();\n          return new Token(TOKEN_TYPE.ALTER, \"?\");\n        case \"|\":\n          this._read();\n          return new Token(TOKEN_TYPE.OR, \"|\");\n        case \",\":\n          this._read();\n          return new Token(TOKEN_TYPE.COMMA, \",\");\n        default:\n          if (isValidCharacter(this.regex[this.currentIndex]))\n            return new Token(TOKEN_TYPE.REGCHAR, this.regex[this.currentIndex++]);\n          throw new Error(\"Tipo desconhecido \" + this.regex[this.currentIndex]);\n      }\n    }\n    return new Token(TOKEN_TYPE.END, \"EOF\");\n  }\n\n  hasNextToken() {\n    if (this.regex) return this.currentIndex < this.regex.length;\n    return false;\n  }\n\n  _read() {\n    return ++this.currentIndex;\n  }\n}\n\nfunction isValidCharacter(character) {\n  return (character >= 'a' && character <= 'z') ||\n    (character >= 'A' && character <= 'Z') ||\n    (character >= '0' && character <= '9') ||\n    character === ' ' || character === '_';\n}"," export default class NFAState {\n   constructor(id, isAccept) {\n     this.id = id;\n     this.isAccept = isAccept;\n     this.nextStates = [];\n   };\n\n   addStates(token, state) {\n     this.nextStates.push([token, state]);\n   }\n }","import _ from 'lodash'\n\nclass CurrentState {\n  constructor(status, currentState) {\n    this.status = status\n    this.currentState = currentState\n  }\n}\n\nexport default class FSM {\n  constructor() {\n    this.acceptStates = [];\n    this.transitions = {};\n  };\n\n  match(text) {\n    var currentState = this.initialState;\n\n    for (var i = 0; i < text.length; ++i) {\n      if (!this.transitions[currentState]) return new CurrentState(false, null);\n\n      const findState = this._findTransitionState(text[i], currentState)\n\n      if (!findState) return new CurrentState(false, null);\n\n      currentState = findState\n    }\n\n    return new CurrentState(_.includes(this.acceptStates, currentState), currentState)\n  }\n\n  _findTransitionState(text, currentState) {\n    var state = null\n\n    for (var nextState in this.transitions[currentState]) {\n      if (this.transitions[currentState][nextState] == text) {\n        state = nextState;\n        break;\n      }\n    }\n\n    return state\n  }\n}","import {\n  TOKEN_TYPE\n} from './utils/constants'\nimport FSM from './FSM'\nimport Token from './Token'\nimport NFAState from './NFAState'\n\nexport default class NFA {\n  constructor(startState, endState) {\n    this.startState = startState;\n    this.endState = endState;\n  };\n\n  toDFA() {\n    const nfaGraph = this._constructGraph(this.startState);\n    const alphabetTable = this._getAlphabetTable(nfaGraph)\n    const variables = this._getDFAVariables(nfaGraph, alphabetTable)\n    return this._constructNFA(variables)\n  }\n\n  _getAlphabetTable(nfaGraph) {\n    var alphabetTable = {};\n    for (var id in nfaGraph) {\n      for (var j = 0; j < nfaGraph[id].length; ++j) {\n        var label = nfaGraph[id][j][0];\n        if (!alphabetTable.hasOwnProperty(label) && label != TOKEN_TYPE.EMPTY)\n          alphabetTable[label] = 1;\n      }\n    }\n\n    return alphabetTable\n  }\n\n  _getDFAVariables(nfaGraph, alphabetTable) {\n    var dStates = [];\n    var states2Id = {};\n    var id2States = {};\n    var id = 0;\n    var closure = this._emptyClosure([this.startState.id], nfaGraph);\n    states2Id[JSON.stringify(closure)] = id;\n    id2States[id] = closure;\n    dStates.push({\n      id: id++,\n      nextStates: {},\n      vis: false\n    });\n\n    dStates[dStates.length - 1].accept = closure.indexOf(this.endState.id) != -1;\n    dStates[dStates.length - 1].initial = closure.indexOf(this.startState.id) != -1;\n    var unvisCnt = 1;\n\n    while (unvisCnt) {\n      var unvisState;\n      unvisState = dStates.filter(function (state) {\n        return !state.vis;\n      })[0];\n      unvisState.vis = true;\n      --unvisCnt;\n      for (var letter in alphabetTable) {\n        if (letter == TOKEN_TYPE.EMPTY) continue;\n\n        var nextStates = this._emptyClosure(this._move(unvisState, letter, id2States, nfaGraph), nfaGraph);\n\n        if (!nextStates.length) continue;\n        var nextStatesString = JSON.stringify(nextStates);\n        if (!states2Id.hasOwnProperty(nextStatesString)) {\n          states2Id[nextStatesString] = id;\n          id2States[id] = nextStates;\n          dStates.push({\n            id: id++,\n            nextStates: {},\n            vis: false,\n            accept: nextStates.indexOf(this.endState.id) != -1,\n            initial: nextStates.indexOf(this.startState.id) != -1\n          });\n          ++unvisCnt;\n        }\n\n        unvisState.nextStates[letter] = nextStates;\n      }\n    }\n\n    return {\n      numOfStates: id,\n      dStates,\n      alphabetTable,\n      states2Id\n    }\n  }\n\n  _constructNFA({\n    numOfStates,\n    dStates,\n    alphabetTable,\n    states2Id\n  }) {\n    const dfa = new FSM();\n    dfa.numOfStates = numOfStates;\n\n    for (var i = 0; i < dStates.length; ++i) {\n      if (dStates[i].initial) dfa.initialState = dStates[i].id.toString();\n      if (dStates[i].accept) dfa.acceptStates.push(dStates[i].id.toString());\n\n      for (var letter in alphabetTable) {\n        if (!dStates[i].nextStates[letter]) continue;\n        const arrayId = [];\n        for (var j = 0; j < dStates[i].nextStates[letter].length; ++j) arrayId.push(dStates[i].nextStates[letter][j]);\n        if (arrayId.length) {\n          if (!dfa.transitions[dStates[i].id]) dfa.transitions[dStates[i].id] = {}\n          dfa.transitions[dStates[i].id][states2Id[JSON.stringify(arrayId)]] = letter;\n        }\n      }\n    }\n\n    return dfa;\n  }\n\n  _emptyClosure(nfaStates, nfaGraph) {\n    var closure = [];\n    var stack = [];\n    for (var i = 0; i < nfaStates.length; ++i) {\n      stack.push(nfaStates[i]);\n      closure.push(nfaStates[i]);\n    }\n    while (stack.length) {\n      var stateId = stack.shift();\n      for (var i = 0; i < nfaGraph[stateId].length; ++i) {\n        var nextId = nfaGraph[stateId][i][1];\n        var label = nfaGraph[stateId][i][0];\n        if (label == TOKEN_TYPE.EMPTY && closure.indexOf(nextId) == -1) {\n          closure.push(nextId);\n          stack.push(nextId);\n        }\n      }\n    }\n    closure.sort(function (a, b) {\n      return a < b;\n    });\n    return closure;\n  }\n\n  _move(dfaState, letter, id2States, nfaGraph) {\n    var stateArray = id2States[dfaState.id];\n    var result = [];\n    for (var i = 0; i < stateArray.length; ++i) {\n      var id = stateArray[i];\n      for (var k = 0; k < nfaGraph[id].length; ++k) {\n        var label = nfaGraph[id][k][0];\n        if (label == letter) {\n          result.push(nfaGraph[id][k][1]);\n        }\n      }\n    }\n    result.sort(function (a, b) {\n      return a < b;\n    });\n    return result;\n  }\n\n  _constructGraph(startState) {\n    var nfaGraph = {};\n    var queue = [];\n    queue.push(startState);\n    var vis = {};\n    while (queue.length) {\n      var state = queue.shift();\n      nfaGraph[state.id] = [];\n      for (var i = 0; i < (state.nextStates).length; ++i) {\n        var nextId = state.nextStates[i][1].id;\n        var label = state.nextStates[i][0].text;\n        var nextState = state.nextStates[i][1];\n        nfaGraph[state.id].push([label, nextId]);\n        if (nextId in vis) continue;\n        vis[nextId] = 1;\n        queue.push(state.nextStates[i][1]);\n      }\n    };\n    return nfaGraph;\n  }\n}\n\nexport const EMPTYTOKEN = new Token(TOKEN_TYPE.EMPTY, 'ε');\n\nexport function contructNFAsUsingOR(subNFA1, subNFA2, parser) {\n  var newNFA = new NFA(new NFAState(parser.id++, false), new NFAState(parser.id++, true));\n  subNFA1.endState.isAccept = false;\n  subNFA2.endState.isAccept = false;\n\n  newNFA.startState.addStates(EMPTYTOKEN, subNFA1.startState);\n  newNFA.startState.addStates(EMPTYTOKEN, subNFA2.startState);\n  subNFA1.endState.addStates(EMPTYTOKEN, newNFA.endState);\n  subNFA2.endState.addStates(EMPTYTOKEN, newNFA.endState);\n  return newNFA;\n}\n\nexport function constructCharacterNFA(characters, parser) {\n  var nfa = new NFA(new NFAState(parser.id++, false), new NFAState(parser.id++, true));\n  for (var i = 0; i < characters.length; ++i) {\n    var subNFA = new NFA(new NFAState(parser.id++, false), new NFAState(parser.id++, false));\n\n    subNFA.startState.addStates(EMPTYTOKEN, subNFA.endState);\n    nfa.startState.addStates({\n      text: characters[i]\n    }, subNFA.startState);\n    subNFA.endState.addStates(EMPTYTOKEN, nfa.endState);\n  }\n\n  return nfa;\n}","import {\n  TOKEN_TYPE\n} from './utils/constants'\nimport Tokenizer from './Tokenizer'\nimport NFAState from './NFAState'\nimport NFA, {\n  EMPTYTOKEN,\n  contructNFAsUsingOR,\n  constructCharacterNFA\n} from './NFA'\nimport FSM from './FSM'\nimport _ from 'lodash'\n\nexport default class Parser {\n  constructor(regString) {\n    this.nfa = null;\n    this.id = 0;\n    this.lexer = new Tokenizer(regString);\n    this.lookHead = this.lexer.nextToken();\n  }\n\n  parseToNFA() {\n    this.nfa = this._resolveExpression();\n    this._reorderNFA();\n    return this._transformToFSM();\n  }\n\n  parseToDFA() {\n    this.parseToNFA();\n    return this.nfa.toDFA();\n  }\n\n  _transformToFSM() {\n    var fsm = new FSM();\n    var queue = [];\n    var vis = {};\n    queue.push(this.nfa.startState);\n\n    fsm.initialState = this.nfa.startState.id.toString();\n    fsm.numOfStates = this.id;\n    fsm.type = 'NFA';\n\n    vis[this.nfa.startState.id] = 1;\n    while (queue.length) {\n      var state = queue.shift();\n      for (var i = 0; i < (state.nextStates).length; ++i) {\n        var nextState = state.nextStates[i][1];\n\n        if (!fsm.transitions[state.id]) fsm.transitions[state.id] = {};\n        fsm.transitions[state.id][nextState.id] = state.nextStates[i][0].text;\n        if (nextState.id in vis) continue;\n        vis[nextState.id] = 1;\n        if (nextState.isAccept) fsm.acceptStates.push(nextState.id.toString());\n        queue.push(state.nextStates[i][1]);\n      }\n    }\n    return fsm;\n  }\n\n  _reorderNFA() {\n    var queue = [];\n    var ordered = [];\n    var vis = {};\n    queue.push(this.nfa.startState);\n    this.id = 0;\n    vis[this.nfa.startState.id] = 1;\n\n    while (queue.length) {\n      const state = queue.shift();\n      ordered.push(state);\n\n      for (var i = 0; i < (state.nextStates).length; ++i) {\n        var nextId = state.nextStates[i][1].id;\n        if (nextId in vis) continue;\n        vis[nextId] = 1;\n        queue.push(state.nextStates[i][1]);\n      }\n    }\n    while (ordered.length) {\n      var state = ordered.shift();\n      state.id = this.id++;\n    }\n  }\n\n  _resolveExpression() {\n    var expressionNFA = this._resolveExpressionWithoutOr();\n    if (_.isEqual(this.lookHead.type, TOKEN_TYPE.OR)) {\n      this._read(TOKEN_TYPE.OR);\n      return contructNFAsUsingOR(expressionNFA, this._resolveExpression(), this);\n    }\n\n    return expressionNFA;\n  }\n\n  _resolveExpressionWithoutOr() {\n    var nfa = this._resolveHeadWithFactor();\n    if (_.isEqual(this.lookHead.type, TOKEN_TYPE.REGCHAR) ||\n      _.isEqual(this.lookHead.type, TOKEN_TYPE.EXTEND) ||\n      _.isEqual(this.lookHead.type, TOKEN_TYPE.LPARENTHESIS) ||\n      _.isEqual(this.lookHead.type, TOKEN_TYPE.LBRACE) ||\n      _.isEqual(this.lookHead.type, TOKEN_TYPE.LBRACKET)\n    ) {\n      var subNFA = this._resolveExpressionWithoutOr();\n      nfa.endState.isAccept = false;\n      nfa.endState.id = subNFA.startState.id;\n      nfa.endState.nextStates = subNFA.startState.nextStates;\n      subNFA.startState = null;\n\n      return new NFA(nfa.startState, subNFA.endState);\n    }\n\n    return nfa;\n  }\n\n  _resolveHeadWithFactor() {\n    var headNFA = this._resolveHead();\n\n    switch (this.lookHead.type) {\n      case TOKEN_TYPE.PLUS:\n        var nfa = new NFA(new NFAState(this.id++, false), new NFAState(this.id++, true));\n        headNFA.endState.isAccept = false;\n        nfa.startState.addStates(EMPTYTOKEN, headNFA.startState);\n        headNFA.endState.addStates(EMPTYTOKEN, headNFA.startState);\n        headNFA.endState.addStates(EMPTYTOKEN, nfa.endState);\n        this._read(TOKEN_TYPE.PLUS);\n\n        return nfa;\n      case TOKEN_TYPE.STAR:\n        var nfa = new NFA(new NFAState(this.id++, false), new NFAState(this.id++, true));\n        headNFA.endState.isAccept = false;\n\n        nfa.startState.addStates(EMPTYTOKEN, headNFA.startState);\n        nfa.startState.addStates(EMPTYTOKEN, nfa.endState);\n        headNFA.endState.addStates(EMPTYTOKEN, nfa.endState);\n        headNFA.endState.addStates(EMPTYTOKEN, headNFA.startState);\n\n        this._read(TOKEN_TYPE.STAR);\n        return nfa;\n      case TOKEN_TYPE.ALTER:\n        var nfa = new NFA(new NFAState(this.id++, false), new NFAState(this.id++, true));\n        headNFA.endState.isAccept = false;\n\n        nfa.startState.addStates(EMPTYTOKEN, headNFA.startState);\n        nfa.startState.addStates(EMPTYTOKEN, nfa.endState);\n        headNFA.endState.addStates(EMPTYTOKEN, nfa.endState);\n\n        this._read(TOKEN_TYPE.ALTER);\n        return nfa;\n      case TOKEN_TYPE.Unknown:\n        throw new Error(\"Tipo desconhecido: \" + this.lookHead.text);\n      default:\n        return headNFA;\n    }\n  }\n\n  _resolveHead() {\n    switch (this.lookHead.type) {\n      case TOKEN_TYPE.REGCHAR:\n        var nfa = new NFA(new NFAState(this.id++, false), new NFAState(this.id++, true));\n        nfa.startState.addStates(this.lookHead, nfa.endState);\n        this._read(TOKEN_TYPE.REGCHAR);\n        return nfa;\n      case TOKEN_TYPE.LPARENTHESIS:\n        this._read(TOKEN_TYPE.LPARENTHESIS);\n        var nfa = this._resolveExpression();\n        this._read(TOKEN_TYPE.RPARENTHESIS);\n        return nfa;\n      case TOKEN_TYPE.LBRACKET:\n        this._read(TOKEN_TYPE.LBRACKET);\n        var allCharacters = this._bracketExpression();\n        var nfa = constructCharacterNFA(allCharacters, this);\n        this._read(TOKEN_TYPE.RBRACKET);\n        return nfa;\n      case TOKEN_TYPE.EXTEND:\n        if (this.lookHead.text == '\\d') return this._getNFADigits();\n        else if (this.lookHead.text == '\\w') return this._getNFAWords();\n      default:\n        throw new Error('Expressão inválida: ' + this.lookHead.text);\n    }\n  }\n\n  _bracketExpression() {\n    var aux = ''\n\n    while (this.lookHead.type != TOKEN_TYPE.RBRACKET) {\n      if (_.isEqual(this.lookHead.type, TOKEN_TYPE.END)) throw new Error('expressão inválida');\n\n      aux += this.lookHead.text\n      this._read(this.lookHead.type)\n    }\n\n    const command = aux.split('-')\n    if (command.length !== 2 || aux.length === 0) throw new Error('expressão inválida');\n    const start = command[0].charCodeAt(0);\n    const end = command[1].charCodeAt(0);\n\n    const response = []\n\n    for (let index = start; index <= end; index++) {\n      response.push(String.fromCharCode(index))\n    }\n\n    return response;\n  }\n\n  _read(type) {\n    if (_.isEqual(this.lookHead.type, type)) this.lookHead = this.lexer.nextToken();\n    else throw new Error('Tipo desconhecido: ' + this.lookHead.text);\n  }\n\n  _getNFAWords() {\n    var allCharacters = (this._getValidDigits()).concat(\n      Array.apply(null, {\n        length: 26\n      }).map(\n        function (x, i) {\n          return String.fromCharCode(97 + i)\n        }));\n    allCharacters = allCharacters.concat(Array.apply(null, {\n        length: 26\n      })\n      .map(function (x, i) {\n        return String.fromCharCode(65 + i)\n      }));\n    allCharacters.push('_');\n\n    var nfa = constructCharacterNFA(allCharacters, this);\n    this._read(TOKEN_TYPE.EXTEND);\n\n    return nfa\n  }\n\n  _getNFADigits() {\n    var nfa = constructCharacterNFA(this._getValidDigits(), this);\n    this._read(TOKEN_TYPE.EXTEND);\n    return nfa;\n  }\n\n  _getValidDigits() {\n    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n  }\n}","import {\n  SET_VISIBLE_NFA,\n  SET_VISIBLE_DFA,\n  SET_AUTOMATA_VIEW\n} from './actionTypes';\n\nexport const setVisibleDFA = value => ({\n  type: SET_VISIBLE_DFA,\n  visibleDFA: value\n});\n\nexport const setVisibleNFA = value => ({\n  type: SET_VISIBLE_NFA,\n  visibleNFA: value\n});\n\nexport const setAutomataView = value => ({\n  type: SET_AUTOMATA_VIEW,\n  automataView: value\n});","export const SET_VISIBLE_DFA = 'SET_VISIBLE_DFA';\nexport const SET_VISIBLE_NFA = 'SET_VISIBLE_NFA';\nexport const SET_AUTOMATA_VIEW = 'SET_AUTOMATA_VIEW';","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid';\nimport _ from 'lodash'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { setVisibleDFA, setVisibleNFA, setAutomataView } from '../../../../actions';\nimport { RegexRules } from '../../../../components'\nimport Chip from '@material-ui/core/Chip';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Radio from '@material-ui/core/Radio';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst titleStyle = {\n  fontSize: 20,\n  padding: 10,\n  fontWeight: 'bold',\n  borderBottom: '1px solid #cacaca',\n}\n\nconst Settings = ({ visible, onClose, visibleNFA, visibleDFA, setVisibleDFA, setVisibleNFA, automataView, setAutomataView }) => {\n  const [copied, setCopied] = React.useState(false)\n\n  return (\n    <Drawer anchor=\"right\" open={visible} onClose={onClose}>\n      <Grid style={{ padding: 10, width: 600 }}>\n        <List>\n          <div align=\"center\" style={titleStyle}>\n            Regex referências\n          </div>\n          <ListItem>\n            <RegexRules />\n          </ListItem>\n          <div align=\"center\" style={titleStyle}>\n            Configurações\n          </div>\n          <ListItem alignItems=\"flex-start\" style={{ marginTop: 10 }}>\n            Modo de visualização dos grafos:\n            <Select\n              style={{ marginLeft: 20, marginTop: -5 }}\n              labelId=\"demo-simple-select-placeholder-label-label\"\n              id=\"demo-simple-select-placeholder-label\"\n              value={automataView}\n              onChange={(event) => setAutomataView(event.target.value)}\n            >\n              <MenuItem value=\"dynamic\">Dinâmico</MenuItem>\n              <MenuItem value=\"continous\">Contínuo</MenuItem>\n              <MenuItem value=\"horizontal\">Horizontal</MenuItem>\n              <MenuItem value=\"vertical\">Vertical</MenuItem>\n              <MenuItem value=\"cubicBezier\">Cúbico</MenuItem>\n              <MenuItem value=\"curvedCCW\">Curvado</MenuItem>\n            </Select>\n          </ListItem>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemText\n              primary=\"Ocultar autômatos:\"\n              secondary={\n                <React.Fragment>\n                  <div>\n                    <Checkbox\n                      checked={visibleNFA}\n                      onChange={() => {\n                        localStorage.setItem('visibleNFA', _.toString(!visibleNFA))\n                        setVisibleNFA(!visibleNFA)\n                      }}\n                    />\n                    Autômato Finito nâo Determinístico (AFND)\n                  </div>\n                  <div>\n                    <Checkbox\n                      checked={visibleDFA}\n                      onChange={() => {\n                        localStorage.setItem('visibleDFA', _.toString(!visibleDFA))\n                        setVisibleDFA(!visibleDFA)\n                      }}\n                    />\n                    Autômato Finito Determinístico (AFD)\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          <div align=\"center\" style={titleStyle}>\n            Regex exemplos\n            <div style={{ fontSize: 12, fontWeight: 100 }}>\n              Clique no item para copiar\n            </div>\n          </div>\n          <ListItem>\n            {\n              _.map(['(abc)|(bbc)', '(2|3)*', '(aba)|(abb)', '[a-h]'], (v, index) => (\n                <React.Fragment key={index}>\n                  <CopyToClipboard text={v} onCopy={() => setCopied(true)}>\n                    <Chip\n                      label={v}\n                      clickable\n                      style={{ marginLeft: 5 }}\n                      title=\"Copiar\"\n                    />\n                  </CopyToClipboard>\n                </React.Fragment>\n              ))\n            }\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              autoHideDuration={2000}\n              open={copied}\n              onClose={() => setCopied(false)}\n              ContentProps={{\n                'aria-describedby': 'message-id',\n              }}\n              message={<span id=\"message-id\">Copiado!</span>}\n            />\n          </ListItem>\n        </List>\n      </Grid>\n    </Drawer>\n  );\n};\n\nSettings.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setAutomataView: PropTypes.func.isRequired,\n  setVisibleDFA: PropTypes.func.isRequired,\n  setVisibleNFA: PropTypes.func.isRequired,\n  visibleDFA: PropTypes.bool.isRequired,\n  visibleNFA: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = store => ({\n  visibleDFA: store.settingsState.visibleDFA,\n  visibleNFA: store.settingsState.visibleNFA,\n  automataView: store.settingsState.automataView,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ setVisibleDFA, setVisibleNFA, setAutomataView }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { NFAGraph, DFAGraph } from '../../components'\nimport PropTypes from 'prop-types'\nimport SettingIcon from '@material-ui/icons/Settings';\nimport Fab from '@material-ui/core/Fab';\nimport Parser from '../../services/Parser'\nimport _ from 'lodash'\nimport Settings from './components/Settings'\nimport { connect } from 'react-redux';\n\nconst Home = ({ visibleNFA, visibleDFA, automataView }) => {\n  const [pattern, setPattern] = React.useState('');\n  const [input, setInput] = React.useState('');\n  const [settingsVisible, setSettingsVisible] = React.useState(false);\n\n  let error = null\n  let parser = new Parser()\n  let nfa = null\n  let dfa = null\n\n  try {\n    if (pattern.length) {\n      parser = new Parser(pattern)\n      nfa = parser.parseToNFA()\n\n      parser = new Parser(pattern)\n      dfa = parser.parseToDFA()\n    }\n\n  } catch (e) {\n    error = e.message\n  }\n\n  const acceptedSentence = pattern.length === 0 || dfa && dfa.match(input).status\n\n  return (\n    <div style={{ backgroundColor: '#fff', padding: 15 }}>\n      <Grid container spacing={3}>\n        <Grid item xs={3} style={{ padding: 0, paddingRight: 5, paddingLeft: 10 }}>\n          <TextField\n            autoFocus\n            id=\"pattern\"\n            error={!_.isEmpty(error)}\n            fullWidth\n            label=\"Padrão\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={(value) => {\n              setPattern(value.target.value)\n            }}\n          />\n          <div style={{ color: 'red' }}>\n            {error}\n          </div>\n        </Grid>\n        <Grid item xs={3} style={{ padding: 0, paddingRight: 5, paddingLeft: 5 }}>\n          <TextField\n            id=\"input\"\n            fullWidth\n            label=\"Entrada\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            error={!acceptedSentence}\n            onChange={(value) => setInput(value.target.value)}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ padding: 0, paddingRight: 5, paddingLeft: 5 }}>\n          <Fab aria-label=\"add\" style={{ marginTop: 15 }} onClick={() => setSettingsVisible(true)}>\n            <SettingIcon />\n          </Fab>\n          <Settings visible={settingsVisible} onClose={() => setSettingsVisible(false)} />\n        </Grid>\n        <Grid item xs={3} style={{ padding: 0, paddingRight: 5, paddingLeft: 10 }}>\n          {pattern.length > 0 && <div align=\"center\"\n            style={{\n              height: '75%',\n              fontSize: 30,\n              marginTop: 15,\n              color: '#ffffff',\n              borderRadius: 5,\n              fontWeight: 'bold',\n              display: 'grid',\n              alignContent: 'center',\n              backgroundColor: acceptedSentence ? '#c4ef9c' : '#ec9a9a',\n            }}>\n            {acceptedSentence ? 'Aceita' : 'Rejeitada'}\n          </div>}\n        </Grid>\n        {\n          visibleNFA && (\n            <Grid item xs={visibleDFA ? 6 : 12} style={{ padding: 10 }}>\n              <div style={{ color: '#000000', borderRadius: 8, height: '88vh' }}>\n                <div align=\"center\" style={{ fontSize: 20, padding: 10 }}>Autômato Finito Não Determinístico</div>\n                <NFAGraph nfa={nfa} automataView={automataView} />\n              </div>\n            </Grid>)\n        }\n        {\n          visibleDFA && (\n            <Grid item xs={visibleNFA ? 6 : 12} style={{ padding: 10 }}>\n              <div style={{ color: '#000000', borderRadius: 8, height: '88vh' }}>\n                <div align=\"center\" style={{ fontSize: 20, padding: 10 }}>Autômato Finito Determinístico</div>\n                <DFAGraph dfa={dfa} automataView={automataView} inputValue={input} />\n              </div>\n            </Grid>)\n        }\n      </Grid>\n    </div >\n  );\n};\n\nHome.propTypes = {\n  visibleDFA: PropTypes.bool.isRequired,\n  visibleNFA: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = store => ({\n  visibleDFA: store.settingsState.visibleDFA,\n  visibleNFA: store.settingsState.visibleNFA,\n  automataView: store.settingsState.automataView,\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react'\nimport Home from '../Home'\n\nexport default () => (\n  <Home />\n)","import {\n  SET_VISIBLE_NFA,\n  SET_VISIBLE_DFA,\n  SET_AUTOMATA_VIEW\n} from '../actions/actionTypes'\nimport _ from 'lodash'\n\nconst storageNFA = _.isNull(localStorage.getItem('visibleNFA')) || localStorage.getItem('visibleNFA') === 'true'\nconst storageDFA = _.isNull(localStorage.getItem('visibleDFA')) || localStorage.getItem('visibleDFA') === 'true'\n\nconst initialState = {\n  visibleDFA: _.isNil(storageDFA) ? true : storageDFA,\n  visibleNFA: _.isNil(storageNFA) ? true : storageNFA,\n  automataView: ''\n};\n\nexport const settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_VISIBLE_NFA:\n      return {\n        ...state,\n        visibleNFA: action.visibleNFA\n      };\n    case SET_VISIBLE_DFA:\n      return {\n        ...state,\n        visibleDFA: action.visibleDFA\n      };\n    case SET_AUTOMATA_VIEW:\n      return {\n        ...state,\n        automataView: action.automataView\n      };\n    default:\n      return state;\n  }\n};","import {\n  settingsReducer\n} from './settingsReducer';\nimport {\n  combineReducers\n} from 'redux';\n\nexport const Reducers = combineReducers({\n  settingsState: settingsReducer,\n});","import {\n    createStore\n} from 'redux';\nimport {\n    Reducers\n} from '../reducers';\nexport const Store = createStore(Reducers);","import React from \"react\";\nimport AppContainer from \"./containers/App\";\nimport {\n  Provider\n} from 'react-redux';\nimport {\n  Store\n} from './store';\n\nconst App = () => (\n  <Provider store={Store}>\n    <AppContainer />\n  </Provider>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}